services:
  consul:
    image: hashicorp/consul:latest
    container_name: consul
    ports:
      - "8500:8500" # Consul UI
      - "8600:8600/udp" # DNS queries
    networks:
      - app-network
    command: agent -server -bootstrap -ui -client=0.0.0.0

  service-registry:
    image: service-registry-image
    build:
      context: ./service-registry
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    depends_on:
      - consul
    networks:
      - app-network
    environment:
      CONSUL_HOST: consul # Use the 'consul' container name
      CONSUL_PORT: 8500

  config-server:
    image: config-server-image
    build:
      context: ./config-server
      dockerfile: Dockerfile
    ports:
      - "8888:8888"
    depends_on:
      - consul
    networks:
      - app-network
    environment:
      CONSUL_HOST: consul
      CONSUL_PORT: 8500

  api-gateway:
    image: api-gateway-image
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - service-registry
      - config-server
      - consul
    networks:
      - app-network
    environment:
      CONSUL_HOST: consul
      CONSUL_PORT: 8500

#  prometheus:
#    image: prom/prometheus:latest
#    container_name: prometheus
#    volumes:
#      - ./prometheus.yml:/etc/prometheus/prometheus.yml
#    ports:
#      - "9090:9090"
#    depends_on:
#      - consul
#    networks:
#      - app-network
#    environment:
#      PROMETHEUS_SCRAPE_INTERVAL: "15s"
#
#  grafana:
#    image: grafana/grafana:latest
#    container_name: grafana
#    ports:
#      - "3000:3000"
#    depends_on:
#      - prometheus
#    networks:
#      - app-network
#    volumes:
#      - grafana-data:/var/lib/grafana
#
#  elasticsearch:
#    image: docker.elastic.co/elasticsearch/elasticsearch:8.17.0
#    container_name: elasticsearch
#    environment:
#      - discovery.type=single-node
#    ports:
#      - "9200:9200"
#    networks:
#      - app-network
#
#  kibana:
#    image: docker.elastic.co/kibana/kibana:8.17.0
#    container_name: kibana
#    depends_on:
#      - elasticsearch
#    ports:
#      - "5601:5601"
#    networks:
#      - app-network
#
#  filebeat:
#    image: docker.elastic.co/beats/filebeat:8.10.0
#    container_name: filebeat
#    user: root
#    volumes:
#      - ./filebeat.yml:/usr/share/filebeat/filebeat.yml
#      - /var/lib/docker/containers:/var/lib/docker/containers:ro
#      - /var/run/docker.sock:/var/run/docker.sock:ro
#    depends_on:
#      - elasticsearch
#    environment:
#      - ELASTICSEARCH_HOST=http://elasticsearch:9200
#      - KIBANA_HOST=http://kibana:5601
#    networks:
#      - app-network
#
#volumes:
#  grafana-data:

networks:
  app-network:
    driver: bridge
